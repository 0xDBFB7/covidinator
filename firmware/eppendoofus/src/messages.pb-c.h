/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: messages.proto */

#ifndef PROTOBUF_C_messages_2eproto__INCLUDED
#define PROTOBUF_C_messages_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _VCOSet VCOSet;


/* --- enums --- */


/* --- messages --- */

struct  _VCOSet
{
  ProtobufCMessage base;
  char *name;
  int32_t power;
  float tuning_voltage;
};
#define VCO_SET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&vco_set__descriptor) \
    , NULL, 0, 0 }


/* VCOSet methods */
void   vco_set__init
                     (VCOSet         *message);
size_t vco_set__get_packed_size
                     (const VCOSet   *message);
size_t vco_set__pack
                     (const VCOSet   *message,
                      uint8_t             *out);
size_t vco_set__pack_to_buffer
                     (const VCOSet   *message,
                      ProtobufCBuffer     *buffer);
VCOSet *
       vco_set__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   vco_set__free_unpacked
                     (VCOSet *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*VCOSet_Closure)
                 (const VCOSet *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor vco_set__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_messages_2eproto__INCLUDED */
