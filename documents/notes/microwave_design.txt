
In order to satisfy the Barkhausen condition for oscillation, a 180 degree phase shift is required 
in the feedback loop. The inverting mosfet itself contributes the remaining 180 degrees.

The S-parameters for the CE3520K3 mosfet are listed on the manufacturer's webpage. 

qucs-RFlayout didn't recognize the QUCS file until the version ("0.0.19") was added to the
opening XML tag. #5.

----------------------------------------------------------------------------

Because of the small engraving bit diameter, we would like to etch a minimum amount of copper.

Microwaves101 says clearance of 3 line widths,
but Digi says clearance of 2 x substrate thickness.

To be safe, we'll go for 5x0.8, or 4 mm clearance.

-------------------------------------------------------------------------------------

A matching network isn't strictly necessary if the gain and VSWR are already satisfactory [mwrf]. 
The S-parameters provided by the manufacturer are given relative to a 50-ohm impedance. 

The S-parameter table shows us that at 8 GHz, the transistor does not produce the 180 degree phase
shift that was expected. The S21 mag,angle (@2v, 50 Ohm, 10 ma) varies from 4.7, 149 deg at 2 GHz to 
4.1, 62 deg at 8 GHz.

That's a clue as to why the most recent LO test didn't work.

Designing the feedback loop would be helped by some optimization, so the Qucs ASCO 4.10 optimizer 
is used. Needed to be patched: https://github.com/Qucs/qucs/issues/861

An AC sim was used in QUCS, with the F interval set to the desired interval.

Unfortunately, the gain isn't particularly satisfactory - the input of the device seems to be 
poorly matched to the output. Or perhaps this is just an artifact of the frequency-dependent 
impedance of the microstrips?

Au contrare. 

Qucs doesn't allow variables as filenames.


Simply teeing the output and feedback on the stage 1 oscillator does work, but if the 


-------------------------------------------------------------------------------------

The SMV1249 varactor in SC-79 (SOD-523) has an inductance of 0.7 nF.

----------------

IF out on the HMC220B should be AC coupled.

    
                  
      |--------------------| 6GHz                      || HackRF spectrum 
1 MHz |--------------------------------------| 12 GHz  ||
                 5 GHz |---------------------| 12 GHz  || Spectrum of interest

      |------------| 4 GHz                             || HMC220B IF range
                 5 GHz |---------------------| 12 GHz  || HMC220B RF range



---------------


Designed qucs loop into kicad. Upgraded kicad to 5.1.5 through dpkg for rounded edges.
Spacebar origin reset is very helpful.


Assembled local_oscillator.kicad. Apparent 9 ohm short across power and gnd, but ended up being
just the normal mosfet resistance. 

Refused to start up until the wires were jiggled, the voltage was increased to 2.3 V, and the current
to 0.025 A. Resonates at 5.75 GHz. Slightly affected by proximity.

There is considerable instability, however. Applying some voltage to the varactor instantly kills the
signal, no matter the osc. bias.

This is a "parallel feedback loop oscillator". 

That was with a 50 R termination on the output. Removing that dropped Fres to 5.6 GHz.

Tried putting a 30 K resistor on the gate to keep the gate bias from floating away. Refused to start
up.

Tried removing the DC block from varactor to gate, to use the existing bias trace to hold down the gate.
Putting a big solder blob on there seemed to prevent it from starting up - 
except later, I saw that when starting with 0.02 A, it steady-state transmits at 0.6V, rather than
the previous 2.3 V. 

There are a bunch of spurious tones, but the main one is much stronger than before - maybe 10x.

It's also more stable. F is still basically the same, 5.8 GHz.

Oh, putting an inductor in the alternate fb loop makes a massive difference.

Even though the OP power is only about -40 DB, the downconverter seems to be operational.

It's hard to tell what the pin diode is doing. Once the resistance is brought down a bit,
the oscillation voltage increases to 1.8v from 0.9, and all tones disappear from downconverter.
 At 0.3 A on the pin diode, the signal returns.


Huh. Is that an effect of the increased inductance to ground?

Exchanged the pin diode for a varactor. The entire spectrum lit up with -10 db signals. 

The current (and, presumably, frequency) actually tracks the HackRF LO sweep!, varying by 5% or so!

Varactor produces a very monotonic shift in F of 500 MHz over 5 V.

Ooh, all sorts of diodes exibit "varicap-like" behavior! Fantastic.

Oh, of course - the varactor isn't being biased above the amplitude, so it's going crazy.

Aha! for stability, the filter (for frequency response) and the phase shift should be optimized seperately.

"Mode hopping" - that's what the pin diode causes. No VCO-like behavior.
-

The thin 6mm FB-reflecting trace seems to actually cause a lot of problems - adds a second pole

Can use PIN diodes as a comb generator

The filter should be sharper to reject alternate modes. Proximity effect could be used to disable
osc. when too close to body?

0.2 mm x 3 mm biasing lines make a significant difference.


HOLD up! We don't need to sweep the LO - we can just use the images on the low side of the mixer
to catch the 4.5-LO GHz region! 

Our substrate thickness isn't conducive to the high-impedance choke traces needed.

I'm being very dumb. I've spent many days just trying different circuits out - learning, I suppose,
but also not being rigorous. There must be a way to design an oscillator piecewise, in a coherent 
fashion. For instance:

when a peak appears, I insert a filter. This changes the phase, so I try inserting a phase shifter-
but this introduces new resonances, etc, etc. This is no way to design a circuit.

[Wu 2013] use 100-ohm choke traces

why am I being so dumb.
 
Pretty sure the entire circuit is wrong. Most circuits have the frequency-determining component
on the drain or source. I can't model that in qucs using this S-param file.

So there's a very undesirable phase shift introduced with series capacitor at around 2-4 GHz.
This should cause ocillation at that frequency - fortunately, the gain of the amp
is very small at that F, so that should be rejected.

People have used varactors to tune across the entire frequency range, but that's pretty tricky

The capacitance of the RF Shottky diodes used varies from 0.28 to 0.22 pF. Most other diodes seem
to be around 10 pF, with the exception of a MMDL914, which goes from 0.62 to 0.55.

Hey, hang on a minute. The phase shift doesn't need to be 360 deg - it just needs to be a 
multiple of 360. As long as the FB filter response is correct, we can add phasing lines...

Loss tangent of substrate was wrong, too.

Had a quarter-wave notch filter that looked so wonderful - but one of the resonators was 100 mm long!

Quin [2017] use 51k ohm resistors as chokes at 1 GHz.

Neat construction of planar caps using mica insulators in Toyoda [1980]

A stepped-impedance tuned bandpass filter seems to be of reasonable dimensions at these frequencies.



https://forum.allaboutcircuits.com/threads/finding-power-levels-at-mixers-input.136016/
"The conversion gain, given in the datasheet, is the ratio of the power at the output to the power at the input. 
The conversion gain given in the datasheet for the LT5511 is 0dB. That means that the output power is equal to input power. 
it really couldn't be simpler. Where do integrals come into that?"

Admittance is just 1/inductance.

"documentation brigades" that trawl through scientific software repos, making notes on the theory behind
the software and providing usage and installation guides

Right now, getting a paper into a prestigious journal is linked with its "scientific quality",
perhaps partially because the peer-review process is integrated with the journal.
All of these incentives - grants, tenure, etc, is all linked with the name of the journal.

What if we made an independent peer-review system that fit into the preprint-server architecture?
Like, there's a peer-review ID that's added to the paper once it's peer-reviewed.

When writing long equations into python, comparing to the source using py2tex is extremely helpful.

SIR would probably have been better, due to the slightly better insertion loss and because of the pun.

The analytic comb version finally works; produces a very nicely tunable and very smooth filter.

Unfortunately, the phase shift is 

The gap S in the comb does not seem to have a particularly profound effect.
A filter of order 2 has an unsuitable phase shift, but 3 seems to be just right.

There is some difficulty in implementing the comb, however. Both sides must be strapped
well to the ground plane while a track of absolutely minimal length loops around - quite inconvienient.

SIRs really do have a better phase response, and can be bent in a more pleasing fashion.

"Advanced design techniques and realizations of microwave and RF filters" - doesn't have it

hang on a goddamn minute, x^2 over x? That doesn't make any sense.

Tried just scaling Kap's design by our factor. Worked fantastically, sharp res, except the resonant frequency
ended up a 24 ghz. Note: two elements were swapped. Shouldn't matter, but anyhow.

Oh wait no, it was right the first time.

Scipy's default optimizer moved only a miniscule delta, and so terminated immediately.
Switched to N-M.

Big ripple at higher modes. Just increasing the number of poles didn't help.



Colpitts-type has a really great phase response, just peachy, but the resonant f is messed up.

Unexpectedly, adding a 10 pF DC block doesn't affect phase response.

Given these parasitics, varying L just changes the resonance!

Hang on a min, aren't ceramic capacitors already varactors? 

DMM has a very convienient dBm mode.

Latest board doesn't seem to work very well.

There's another package for this varactor with a much lower parasitic inductance.

"Theory and design of " Hunter  has:

3.6 Filters with specified phase and group delay characteristics

Oh man! Part of the issue disguising the phase shift was the low freq. resolution of the sim!

When multiple 360-0 lines overlap, that's due to the resolution.

Somehow adding another cap section in series between the SIR stages sharpened the filter,
*and removed all the higher modes!* amazing!

mmm the C0G dielectric used in these small caps doesn't have much C/V dependence ("Voltage Coefficient").
in fact there's zero change! There goes that idea.

mm the 0.7 nH parasitics are actually fine.

mm no. The high-freq 12+GHz modes are amplified by the parasitics - seems to be some sort of resonance.

If capacitors are tied to ground, any small impedance has a substantial effect on the performance.
This is probably why the last test, with a 0.1 uF 0603 to ground, failed miserably.

1 mW on a 50 ohm trace is about 0.3v.

Definitely need the output to be terminated. Huge distortions otherwise.

The newest board (with bodged-in varactor bias and no varactor bias offset above operating voltage)
 has two regimes, precisely as expected from simulation;
it's stable in curent at 1.6 V 0.03 A if Vvaractor > 4 V, or about 0.8 pF.

The sweep is far smaller than expected, however - only around 0.2 GHz.
 This could be an artifact of the downconverter, but I don't think so.

The lowest frequency is also much higher than expected.
 
I can't break the sim in such a way to reproduce this. It's also getting stuck at a second mode
occasionally - adding capacitive coupling to the wierd ground dangle, adding the 1.5mm trace
at the end,

Hmm, but adding coupling from the trace to the ground plane does greatly increase the
17 GHz mode's amplitude.

Adding the ground dangle causes an issue. That might be it.

Added thick via wire from varactor to ground plane. Much more stable; no second modes.

Correction: there are now three modes. One CC limited at  0.45 V , one at 1.6 V, and one at 0.75.
Only the 0.75 V mode appears on the downconverter.

The mode that it settles in also seems to be determined by inrush current.

PSU's having a lot of trouble driving the varactors.

This would be a good time for one of those Keithley SMUs.

Adding the bias tees adds a huge mode at a few MHz. Adding the 0.2mm traces worsens the problem - 
just a direct coupling to the inductors seems to be the best. Adding a 1 K resistor where possible 
improves the situation.

Bias issues again.

Even the weakest bias coupling to the intermediate junction thingy causes huge distortion.

And removing the second varactor tee means that the other junction is now sensitive.

Putting the 0.2mm trace + inductor before the SIR filters worked a little better,
just the inductors works even better but still inadequate

leakage resistance of capacitors 

There's a technique (DSPSL) that uses a broken ground plane to create a very high impedance trace.

Adding radial stubs like in [Syrett 1980] is slightly more effective;
but the stub that's after the varactors still distorts things severely.

600 nH inductors still shift phase, but don't otherwise affect the circuit.

Aha! 10k 0402s directly off the line to a decoupled radial stub works perfectly.

Adding a small amount of inductance before the capacitor bank decreases the power in the higher modes.
mmm but that's at the cost of a gross phase shift.

Shorting C4 increases the low-frequency mode.

Adding another SIR microstrip hampers the phase response.

Realizing that I've been complacent in documenting designs and testing.

# Rev 4 LO.

Board design as committed in SIR_unit_test.sch and local_oscillator_v2. Etched. soldered. 

Much lower power consumption than previous versions. Stable startup at Vvaractor = 0, 15...

Strong, stable tone at -30 dB | 5.5 GHZ | 20v varactor bias. 

Somehow I've locked it at 2.2 GHz and can't get it back to 5. Might be an effect of the bias voltage.

Removed the shunt varactor. Now sweeps from 4.8 -5.2 GHz.

Lowpass to bandpass conversion described in "introduction to microwave circuits " 9.4
The book on microwave filters (?) had a chapter on designing fixed-group-delay filters.


oh my gosh I've been looking at the wrong phase this whole time

...no, I think I've been looking at the right one

phasing lines seem to have little dependence on width.

Using the reference hp+lp 180 deg phase shifters on Microwave101's website works.

Push-pull amps can provide wide bandwidth 

for reference,
]
sleeep is important.

Optimization seems to be improved if all the parameters are approx. of the same order.

Using basinhopping works fantastically well. A good (non-tunable) solution is found with 2 hp and 1 lp elements.
convergence is improved if more MC/stochastic steps are used 

Metal-insulator-metal (MIM) parallel-plate capacitor - that's what that one paper used -
nonlinear dielectric?

man, scipy.basinhopping is extreme. This thing just optimized 9 variables from a random guess
- in 200 iterations! 
holy crap! I didn't even know that was possible.

PIN diode switch between antenna and power sensor
mosfets and current sensing resistor on board
Only power up second stage amplifier - not oscillator - to minimize transient effects
probably need a P-channel mosfet on high-side, else grounding will be an issue


13 variables with microstrip width and length seems to be a bit much. No reasonable 
solutions found.

This optimizer will also be useful for tuning the virus simulation itself and for tuning the 
input waveform against the simulation.

Oh, and IRL! The eppenwolf and turbidimeter can be linked with the optimizer to tune the 
frequencies & polarizations IRL.

A 0.2 mm thick polyethylene substrate would use 0.58 mm traces. 0.5 is essentially identical to 
0.79 mm FR4.

A 1.5 mm overlap on a 1.5mm trace with a 0.1 mm sheet of paper (er=2.2) between has a capacitance of 
0.44 pF. This could be CNC'd in a second step?

There's a capacitor shortage. Probably doesn't matter for our use-case.

Zinc oxide is a slightly nonlinear capacitor at kilovolts of bias [Guo 2018].

--------------      - aluminized mylar, conductive ink, Graphite?
ssssssssssssss          - Kapton, mylar layer, screen printed something or other
------   ---------      - microstrip gap


1 Mohm * 1 picofarad = 1 us.

In fact, if a 0.5mm thick conductive layer was added like so:


         ||||||    ||||||
---------------    ----------------

8.8e-12 Farads/m * 5 * (1.5 mm * 0.5 mm) / (0.2 mm) = 0.165 pF

That could be solder, 

S-params are also available for the BFP620. Fantastic.

A patch antenna at 8 GHz is about 1 cm square.

Patch antenna bandwidths are only on the order of a few percent. 
U-slot patch antennas look perfect. [Wang 2008] has a design guide.


So either you can change the geometry of the antenna to make it  (trim the U, truncate a corner)
polarized, or you can feed it at two different points with a 90 degree phase shift.

[He 2015] -bbbingo dual-feed wideband U-slot. Uses vias for feed though. 

Could also just use two or four stock antennas at right angles. that'd work, very simple!

U-slot antennas want a thick substrate, however.

Writing words here doesn't give the reader a very good idea of what happened; the character is missing.

[Freundorfer 2016] uses BST film as predicted in a microstrip gap. Works reasonably well,
except the tuning range is only a few percent.

So the Q and parasitic inductance of the varactor seems to have a significant impact on the performance
of the tunable filter. This sort of makes sense;

7 GHz * 2 pi * 0.7 nH = 31 ohms of inductive reactance:
-1 / (2 pi * 7 GHz * 0.2 pF) = 113 ohms of capacitive reactance. 

"However, obtaining an octave of tuning
range in an LC tank oscillator is challenging, 
primarily because parasitic capacitances form a significant component of tank capacitance. "

Because the optimizer needs the derivative information,
we have to round to manufacturing tolerances after the sim is complete.

[Tserng 1977] talk about load resistors for maximum power output. Also, 45% efficiency. Really good paper.

They just use a single vco and inductor at the source.wtf

[Adar 1991]  

[Tsuru 2008 Fig 10] has a great chart of different wideband VCO designs.

 

 Oh, and the small SMV2019 still has 0.45 nH, not 0.2.

 10k resistors will be perfect for biasing at 1 ma (20 ohms on the pin diode), 10v

 With 3 bits in series, 20 ohms does attenuate the signal quite substantially.

 So does 10 ohms.

5 ohms requires around 3 mA - and there's two in series, so 6 mA.

undesirable effects occur when two 10k resistors are put in parallel straddling the PiNs, but
the DC blocking caps can only do 50v, and I don't want to put ones in series.

If I ever get a swelled head, please remind me that I just wasted an hour
due to having forgotten how the multimeter diode function works.

So, tried a simple low-pass in the last LO test.

Parts are starting to go out of stock on DigiKey.

"The oscillator was also operated in self-biased mode. As
the drain voltage is raised, the drain current increases very
rapidly at first until oscillation commences and a negative
bias develops on the gate." 

if not self-biased, they used -3v bias. interesting.


this "self-bias" idea is also present in Grebennikov.


Even MESFETs need a positive gate threshold. so why is a negative voltage required on the output?

that 9.8 ghz paper also used 

That BST varactor paper used a 1Mohm (!) resistor as a choke.

"Some principal design rules of general validity should be
respected for designing VCOS in order to avoid parasitic
oscillations at low frequencies and frequency jumps within
the effective bandwidth.
Parasitic oscillations can be avoided if care is taken
during the choice of the load and the feedback circuit in
order to force Re ( Z~ ) >0 outside of the band as far as
possible.
Frequency jumps are due to phase loops within the
band. In order to avoid such effects, we design the circuit"

Contacted some people at a microwave lab at the UofT. One said "very interesting",

the other said, approximately, "you cannot make that VCO in microstrip, you need an IC,
and it'll be expensive and just use UV."

Whenever an expert says you're wrong, it's important to very carefully consider your position and
the evidence that you have. 

And it's true that most of these designs use CMOS. 

The HB100 radar is definitely a counterexample; it's clearly a fully-microstrip design with 
an external dielectric resonator. Un-interrupted ground plane, patch antennas.
All designs seem to have shielding on the back - I guess they encountered the same proximity-effect
issues.


OOO hang on, we don't neccessarily need to modify gprMax to include qucs.
We can extract two-port parameters from gprMax for each segment of the circuit,
and add them as seperate files in qucs.

We really should have a transient sim.

Sonnet lite - looks like it's just fdtd, circuit stuff is handled seperately

Matlab RF toolbox has a S-param->spice generator, free trial

LTspice has 2-port parameters, neat

https://www.mathworks.com/matlabcentral/fileexchange/6080-s-parameter-toolbox-z-y-h-g-abcd-t
s-param toolbox

Modelithics have ADS etc models for the CEL tx and the varactor.


According to Modelithics, the CEL device can do 13.8 dBm, or 24 milliwatts.

That's the Typical Gain figure from the datasheet, but I don't think that's the actual max power output.


https://github.com/thliebig/openEMS/blob/master/matlab/examples/other/LumpedElement.m openEMS 
has a lumped element

It's possible to convert S-parameters to SPICE model via [Steenput 1999] via negative resistances,
but that 

VM of manjaro or void linux for openems

The AD8319 power sensor is only good to 12 dBm. We'd need a precision attenuator at 8 GHz.
Indeed, all the power sensors on Digikey are only good to 16 dBm (40 mW).

Mini-circuits has SMD attenuators to 43 GHz and power detectors to 8 GHz to 20 dBm (100 mW).






model_build_run.py -> solve_cpu()


Okay, so here's the deal. QUCS's S-param microstrip approximation is great.
However, they don't work with the transient sim. 

We're really not getting the full picture without a transient sim, I don't think.
Especially the grounding.

This would be so much easier if I just had Microwave Office, but
that's really not going to happen,
and all the free trials of all the programs I've found don't include the 
"coupled" part of the simulation.


.ic initial conditions looks good. .nodeset isn't it, that's just for convergence.
also https://sourceforge.net/p/ngspice/discussion/133842/thread/9ec3143b/ 
uses a voltage supply shorted to a resistor.

`reset` looks good too.

https://github.com/thliebig/openEMS/issues/54 dockerfile! wonderful!

So it looks like modifying GPRmax won't be all too onerous.
However, it might be a bit too slow for optimization. 

For this reason, it might be a good idea to first make the CEL model and try a transient 
sim. Probably with the existing qucs-python thingy.

Er, hmm


we also need need this fdtd sim if we want to use that cool interdigital design

http://openems.de/forum/viewtopic.php?t=346
the loss tangent can be modeled as a conductivity:

substrate.kappa  = 1e-3 * 2*pi*2.45e9 * EPS0*substrate.epsR;

neat!  

and the Debye dispersive module can handle wideband loss. neat!

"8.0 Availability of Practice Chips:
Assembly practice chips are available from CEL"
that's cool!

CEL has a great appnote, AN1023, talking about making SPICE models for GaAs parts.





ngspice is at /home/arthurdent/Programs/ngspice-32/install/bin/ngspice


using B620 for now, got https://sourceforge.net/p/qucs/discussion/311050/thread/700dec7a/ error

have to re-compile qucs with that change
https://github.com/Qucs/qucs/blob/master/qucs-core/src/components/devices/bjt.cpp#L779
mmmmmmmmm >:|
okay


HOld up. gprMax is a big program, but we really aren't using any of it - just a simple FDTD algo,
the scripting language, while great, isn't nearly ideal for this application, and the API
isn't really suitable for direct calls.

let's try python's fdtd!


airborne or space-based maser?


flaport/fdtd - on 'numpy' pegs a single core, does 1.75 iterations per second on a 150^3 mesh.
that's 20 mm x 20 mm at 0.2 mm/grid - perfect!


Kicad crashed, had to remove lockfiles with rm $XDG_RUNTIME_DIR/kicad/*


flaport/fdtd seems not to directly support perfect conductors, using a magnetic loss rather than
an electric one.
 
"Electromagnetic simulation using the FDTD method" -nope


1     6e7     1 0 copper

oh! no, it's fine, he's not using the H-field equs


Recent paper on Far UV shows that it might actually be safe, penetration is so low
that might be an even better method

huge lag on atom. Had to upgrade. sudo chmod 4755 /usr/share/atom/chrome-sandbox too.

using an absorbing substrate in fdtd ruins everything. Why's that
using a conductivity of 0 works fine. hmm is this a physical effect?

http://openems.de/index.php/Material_Property.html uses 'kappa' as conductivity.

Cool, ngspice supports 'CPL' coupled lines, up to 8 coupled.

Section 3.3 in the BFP620 datasheet describes a 50R system - might not even need a matching network?


Tried voltage -> voltage using the capacitor-spice method in []. doesn't really seem to work properly?
the time delay is right, but everything else is wrong. Doesn't match a spice-only transmission-line
model at all.

Perhaps should try voltage -> current. 



https://github.com/recipy/recipy
https://github.com/VIDA-NYU/reprozip
https://pythonhosted.org/Sumatra/handling_data.html

Oh hey, I should have a documentation folder with stuff like backup processes, compilation, etc

Sumatra is great, but all my scripts seem to break when put through it.


the Galaxy project is really interesting. 

scikit-rf.network has an s2y function - the conversion is really easy


file could be fed to spice using circbyline

this ngspice doesn't seem to work with timesteps < 1 ps. There is a substantial difference in the oscillation
between 2 ps and 1 ps.

ERROR:ngspyce.sharedspice:doAnalyses: TRAN:  Timestep too small; time = 1.01622e-15, timestep = 1.25e-24: trouble with node "x4.102"

oh hey, that's probably why the FDTD sim wasn't working. The timestep wasn't right!
something to re-check later.


the actual timestep is limited by ckt->CKTdelmin = 1e-11*ckt->CKTmaxStep; - 
it seems to be much, much smaller on average than the actual timestep.


modified, recompiled: 

ERROR:ngspyce.sharedspice:doAnalyses: TRAN:  Timestep too small; time = 7.55625e-11, timestep = 1.25e-64: trouble with node "x1.2"

 UH OH

 oh noes

 changed it back. modifying reltol doesn't help matters, still 'timestep too small' at tstep<1ps.

 it's not the 0-ohm shunt links, either. 

"timestep too small" is generally a result of a malformed circuit, apparently.
that circuit's in the varactor, though, so ???

[Winch 1982] hmm! there's something called a "doubling mode" oscillator, which can accomodate lower 
frequency transistors. They use 4
 NE64500 transistors with a fT of 8.5 GHz and get 19 GHz out of it. only 0 dbm, though.

so I've basically been barking up the wrong tree this whole time. 
the inductance of essentially any filter structure is too high for a 'direct' RC oscillator.

We get SUPERB stability and frequency response from just a double-tuned varactor thingy.


The ampere's law magnetic field contour thingy isn't working. IDK.

ngspice does read negative currents correctly.

The sim gets unstable when a smaller capacitance is used. interesting.

ah, the timestep is too large: (0.02 amps / 1e-15 farad * 0.3 picoseconds) = 6V.



the issue with kicad text entry just needed an pkill -o ibus-daemon
 

the nets generated by kicad will have to be split.

set num_threads doesn't make any difference.


pytorch tensor supports the 'half' type. something to look into.


ultra-micro incandescent light bulbs with a power of 0.05 w are available.
Of course, these need to produce light; at 1000 K  (BaO filament) 
(1000^4)/((2000^4)) = 0.0625x the power

0.003125 watts! that's pretty good!

that's 7.5 ma at 7.5v.

wire-bonded filament? 0.01mm nichrome is available.

cell capacitance value needs to be re-checked. 

Ciampolini 1995 iteratively try dts until convergence. They use a simple set of lumped-element 
equations, not a big, bulky SPICE sim, so that's fine. There's a significant "downshifting" effect.

This could be mitigated by better choosing the initial guess timestep.

Right now 4 iters of the SPICE takes 30 ms, while a small, coarse FDTD takes 20.
So not a huge deal, but it does mean that switching to half-precision won't make a big difference.

the two transistor pins are the squeaky wheels that get the timestep. wierd. adding an rshunt doesn't 
do anything.

yeah, the transistor pins are doing this:

NETU10 6.32961368560791 1929.1538000106812
NETU12 -6.32961368560791 -1929.1538000106812

wack.

RE1 33 31 1E-03
RE2 33 32 1E-03

that's probably why.


Run one SPICE step, then iterate until equilibrium.

Trim the excess copper?

_FORTIFY_SOURCE -cool

The BFP620 has a larger heatsinking lead on the second emitter pin. The thick
50-ohm output trace should be connected to that.

That makes it refuse to oscillate, and I CBA to figure out why. The oscillator
won't need dissipation anyhow - the buffer amp will be the hot bit.

copper tape as jumper?

Digikey sells cool little SMD jumpers. 

maybe I've always been attacking this via problem the wrong way in the past. We really just need 
to jump over traces - jumpers on the solder side are pretty well perfect?

OOOh! Modular design!


ah - the fast, switching P-mos for pulses can be after the slow, regulated supply.

make a fault tree for a Type 1 error state, to make sure we're not drawing the wrong conclusions


The pads were too large on all the 0402 parts.


oh my god. I figured out why the sim wasn't working. NONE OF THE PADS ARE IN THE RIGHT PLACE.

rudimentary buck converter. It's a terrible idea to feed an RF device with a switching supply;
all the noise will be injected into the carrier. It's fine in this case I think though.

nah, using an NPN now.

The RF power detector becomes really non-linear at beyond -10 dB; that means three
10 dB attenuators would be required in series. 

We should probably compare with a SPICE sim of the RF shottky rectifier.

It would be interesting to combine boundary-scan with SPICE. Correlate nets with pins,
apply random impulses, see how the output compares.
There would be a concept like "hardware test coverage"; how much of the hardware has been exhausted


Infineon AN_1807 is really neat, on using diode detectors for power sensing. Ez pz, no complex
matching networks required like [Tan 2018] use.

"Furthermore, PN junction diodes are
minority semiconductor devices suffering from the low recombination velocity of the minority carriers in the
space charge region, whereas Schottky diodes are controlled by the charge transport over the barrier from the
majority carriers. This leads to very fast switching action for the Schottky diodes and makes them very
attractive for RF and microwave rectification."

Neat! We can use the AD chip to leapfrog-calibrate the Infineon chip, comparing with SPICE.

en532276.pdf great paper on EEPROM longevity.
"This is a quantum-mechanical process known as Fowler-Nordheim tunneling. The key to this
tunneling is that the electrons barely disturb the oxide layer, so the process can be repeated millions
of times. A flash cell uses a different programming technique, called Channel Hot Electron
Programming, that damages the oxide layer with every write. That’s why E2’s have much higher
endurance than flash, which is usually specified to only 10,000 cycles."

"To expand on that last point, we at Microchip are very proud of our endurance."


p-channel foldback 


okay, so, we want to ramp the frequency over a 0.1 us pulse.


Adding another mosfet to discharge the LP filter cap,
10 uF * 1 ohms = 10000 ns, so that's not going to do it.

the DAC doesn't seem to be capable of producing nanosecond pulses.
the external DACs that I have can't either.

Using a 10 nF cap on each rail now.



ghrr usb linux pki silly LAN grumble grumble

lxi discover 
lxi screenshot --address 192.168.0.26 --plugin rigol-1000z

works great.


there's no capacitance on the 48V rail input. should be fixed