
got a 'junction potential too large' error with a varactor.
recompiled with a new option DIOtDepCapMax. 

src/spicelib/devices/dio/diotemp.c:204
```
            double DIOtDepCapMax;

            bool DepCapMaxSet = cp_getvar("DIOtDepCapMax", CP_REAL, &DIOtDepCapMax, 0);
            /* limit junction potential to max of 1/FC */
            if((!DepCapMaxSet && here->DIOtDepCap > 1.0) ||
                (DepCapMaxSet && here->DIOtDepCap > DIOtDepCapMax)) {

```
That might adversely affect convergence in some cases, but it works perfectly fine here.


Next, the alterparam command is not implemented when using NGSpice as a shared library:


>>> ngspyce.cmd('altermod')
ERROR:ngspyce.sharedspice:Error: no circuit loaded
[]
>>> ngspyce.cmd('alterparam')
ERROR:ngspyce.sharedspice:alterparam: no such command available in ngspice
[]


that error is thrown by src/frontend/control.c:208.

src/sharedspice.c:ngSpice_Command -> runc(
cp_coms[i].co_comname


didn't change anything here.



If you mistype the circuit filename for 'source' a few times, the interactive interpreter will
start to screw up, and then ngspice segfaults.


nope, turned out I just needed to re-compile ngspice lib? strange.

neat - you can do adaptive timestepping in ngspice by using snsave and snload



modified line 36 of src/spicelib/analysis/traninit.c.


